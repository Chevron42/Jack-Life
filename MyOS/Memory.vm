function Memory.init 0
push constant 0
pop static 0
push constant 2048
pop static 2
push constant 16383
pop static 3
push static 3
push static 2
sub
pop static 4
push static 2
pop static 1
push constant 1
push static 1
add
push static 4
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push static 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.peek 0
push argument 0
push static 0
add
pop pointer 1
push that 0
return
function Memory.poke 0
push argument 0
push static 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.alloc 5
push static 1
pop local 0
push static 4
pop local 4
push constant 1
push local 0
add
pop pointer 1
push that 0
push argument 0
push constant 2
add
lt
not
if-goto IF_TRUE_0
goto IF_FALSE_0
label IF_TRUE_0
push constant 0
not
pop local 3
push local 0
pop local 1
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 4
label IF_FALSE_0
label WHILE_TOP_0
push constant 0
push local 0
add
pop pointer 1
push that 0
push constant 0
eq
not
push local 4
push argument 0
push constant 2
add
eq
not
and
not
if-goto WHILE_BREAK_0
push constant 0
push local 0
add
pop pointer 1
push that 0
pop local 0
push constant 1
push local 0
add
pop pointer 1
push that 0
push argument 0
push constant 1
add
gt
if-goto IF_TRUE_1
goto IF_FALSE_1
label IF_TRUE_1
push constant 0
not
pop local 3
push constant 1
push local 0
add
pop pointer 1
push that 0
push local 4
lt
if-goto IF_TRUE_2
goto IF_FALSE_2
label IF_TRUE_2
push local 0
pop local 1
push constant 1
push local 0
add
pop pointer 1
push that 0
pop local 4
label IF_FALSE_2
label IF_FALSE_1
goto WHILE_TOP_0
label WHILE_BREAK_0
push local 3
not
if-goto IF_TRUE_3
goto IF_FALSE_3
label IF_TRUE_3
push constant 5
call Sys.error 1
pop temp 0
label IF_FALSE_3
push constant 1
push local 1
add
push constant 1
push local 1
add
pop pointer 1
push that 0
push argument 0
push constant 2
add
sub
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 1
push constant 1
push local 1
add
pop pointer 1
push that 0
add
push constant 2
add
pop local 2
push constant 1
push local 2
add
push argument 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
push constant 2
add
return
function Memory.deAlloc 0
push constant 2
neg
push argument 0
add
push static 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push argument 0
push constant 2
sub
pop static 1
push constant 0
return
